<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lrlz.springcloud.orderservice.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.lrlz.springcloud.orderservice.domain.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="post_fee" property="postFee" jdbcType="DECIMAL" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="BIT" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, post_fee, payment, status, payment_time, update_time, user_id, delete_flag, 
    payment_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lrlz.springcloud.orderservice.domain.OrderCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lrlz.springcloud.orderservice.domain.OrderCriteria" >
    delete from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lrlz.springcloud.orderservice.domain.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_order (create_time, post_fee, payment, 
      status, payment_time, update_time, 
      user_id, delete_flag, payment_type
      )
    values (#{createTime,jdbcType=TIMESTAMP}, #{postFee,jdbcType=DECIMAL}, #{payment,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{deleteFlag,jdbcType=BIT}, #{paymentType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lrlz.springcloud.orderservice.domain.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="postFee != null" >
        post_fee,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postFee != null" >
        #{postFee,jdbcType=DECIMAL},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lrlz.springcloud.orderservice.domain.OrderCriteria" resultType="java.lang.Integer" >
    select count(*) from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.postFee != null" >
        post_fee = #{record.postFee,jdbcType=DECIMAL},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.paymentType != null" >
        payment_type = #{record.paymentType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      post_fee = #{record.postFee,jdbcType=DECIMAL},
      payment = #{record.payment,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      delete_flag = #{record.deleteFlag,jdbcType=BIT},
      payment_type = #{record.paymentType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lrlz.springcloud.orderservice.domain.Order" >
    update tb_order
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postFee != null" >
        post_fee = #{postFee,jdbcType=DECIMAL},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lrlz.springcloud.orderservice.domain.Order" >
    update tb_order
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      post_fee = #{postFee,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=BIT},
      payment_type = #{paymentType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>